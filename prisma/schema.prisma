// schema.prisma
// Arrays dont exist... they become realation tables OR you could ... JSON.stringify(["I", "want", "to", "use", "an", "array"]) and JSON.parse on the other end
// One to many relation https://www.prisma.io/docs/concepts/components/prisma-schema/relations
// Implicit many to many realtion https://www.prisma.io/docs/concepts/components/prisma-schema/relations/many-to-many-relations

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                  Int       @default(autoincrement()) @id
  name                String?
  email               String?   @unique
  permissions         Int
  createdAt           DateTime  @default(now()) @map(name: "created_at")
  updatedAt           DateTime  @updatedAt @map(name: "updated_at")
  projects            UserProject[]
  @@map(name: "users")
}

model Project {
  id                  Int       @default(autoincrement()) @id
  users               UserProject[]
  jobCode             String    @unique
  name                String
  location            String
  plansURL            String    @unique
  specificationURL    String    @unique
  trades              Trade[]
}

model UserProject {
  user                User      @relation(fields: [userId], references: [id])
  userId              Int
  project             Project   @relation(fields: [projectId], references: [id])
  projectId           Int
  assignedAt          DateTime  @default(now())
  assignedBy          String
  @@id([userId, projectId])
}

model Trade {
  id                  Int       @default(autoincrement()) @id
  project             Project   @relation(fields: [projectId], references: [id])
  projectId           Int       
  costCode            Int       @unique
  name                String    @unique
  tenders             String    //Can't use arrays with SQLite connector https://www.prisma.io/docs/concepts/components/prisma-schema/data-model#scalar-fields
  assigned            String
  estimateValue       Int
  contractValue       Int
  subAgreementStatus  String    
  subAgreementURL     String    @unique
}